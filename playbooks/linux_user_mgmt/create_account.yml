---
- hosts: all
  gather_facts: false
  vars:
    server_list:
      - server_name: ubuntu.lab.com
        account:
          - account_name: account1
            account_id: 123469
            account_primarygrp: groupa
            account_secondarygrps: groupd, groupc
            account_shell: /bin/bash
            account_description: Test Account1
            account_state: present
            account_homedir: /home/account1
            create_home: yes
  tasks:
  - name: Create Groups
    group:
      name: "{{ item }}"
      state: present
    with_items:
      - groupa
      - groupb
      - groupc
      - groupd

  - name: Collect account information
    shell: getent passwd | awk -F":" '{print $1}'
    register: accounts_list
    ignore_errors: yes
    failed_when: false

  - name: Get all group(s) information
    getent:
      database: group
      split: ':'
      fail_key: no

  - name: Check for primary group
    debug:
      msg: "Primary group {{ item.1.account_primarygrp }} doesn't exist on {{ inventory_hostname }}"
    when:
      - item.1.account_primarygrp not in getent_group
      - inventory_hostname==item.0.server_name
    with_subelements:
      - "{{ server_list }}"
      - account

  - name: Confirm account exists
    debug:
      msg: "Account {{ item.1.account_name }} exist on {{ inventory_hostname }}"
    when:
      - item.1.account_name in accounts_list.stdout_lines
      - inventory_hostname==item.0.server_name
    with_subelements:
      - "{{ server_list }}"
      - account
    ignore_errors: yes

  - name: Create account
    user:
      name: "{{ item.1.account_name }}"
      group: "{{ item.1.account_primarygrp }}"
      groups: "{{ item.1.account_secondarygrps }}"
      state: "{{ item.1.account_state | default('present') }}"
      shell: "{{ item.1.account_shell | default('/bin/bash') }}"
      uid: "{{ item.1.account_id | default(omit) }}"
      comment: "{{ item.1.account_description }}"
      create_home: "{{ item.1.create_home | default('yes') }}"
      home: "{{ item.1.account_homedir | default(omit) }}"
      append: yes
    register: create_status
    when:
      - item.1.account_name not in accounts_list.stdout_lines
      - inventory_hostname==item.0.server_name
      - item.1.account_primarygrp in getent_group
    with_subelements:
      - "{{ server_list }}"
      - account

  - name: Check account's home directory permissions and ownership
    command: stat -c '%a' "{{ item.1.account_homedir }}"
    register: output
    when:
      - create_status is changed
      - inventory_hostname==item.0.server_name
    with_subelements:
      - "{{ server_list }}"
      - account
    failed_when: false

  - name: Set account's home directory permissions and ownership
    file:
      dest: "{{ item.1.account_homedir }}"
      owner: "{{ item.1.account_name }}"
      group: "{{ item.1.account_primarygrp }}"
      mode: "0700"
    when:
      - output is changed
      - ( output.results | map(attribute='stdout')| list )!="0700"
      - inventory_hostname==item.0.server_name
      - item.1.account_primarygrp in getent_group
    with_subelements:
      - "{{ server_list }}"
      - account
